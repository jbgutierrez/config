#!/usr/bin/env bash
# Simple file watcher to perform actions when files are added or updated in the file system
usage(){
  cat <<END
usage: watch FILE_OR_FOLDER [options] -- action

  The options are as follows:

    -i interval   Interval in seconds to scan filesystem. Defaults to 2 seconds.
    -n name       Name pattern
    -d            Printe debug info

END
  exit 1
}

[[ $# -ge 1 ]] || { echo -e "Incorrect number of parameters\n" >&2; usage; }

debug(){
  (( debug )) && echo "$*"
}

file_or_folder=$1
declare -i interval=2
declare -i debug=0
pattern='*'
shift

while getopts ":i:p:rd" opt; do
  case $opt in
    i)  interval=$OPTARG ;;
    p)  pattern=$OPTARG  ;;
    d)  debug=1          ;;
    --) break            ;;
    :)  echo -e "Option -${OPTARG} is missing an argument\n" >&2; usage ;;
    ?) echo -e "Unknown option: -${OPTARG}\n" >&2; usage               ;;
  esac
done

shift $((OPTIND-1))

depth=1
[[ -d $file_or_folder ]] || depth=0

cmd=$*
[[ -n $cmd ]] || { echo -e "Need an action\n" >&2; usage; }

debug "watching folder $file_or_folder every $interval secs."

while [[ true ]]; do
  now=$(date +"%s")
  [[ ! -z "$last_run" ]] || last_run=$now
  diff=$((last_run-now-1))
  files=$(find "$file_or_folder" -d "$depth" -name "$pattern" -type f -mtime "${diff}s")
  last_run=$(date +"%s")
  if [[ $files == "" ]] ; then
    debug "nothing changed"
  else
    debug changed, "$files"
    re="[[:<:]]FILE[[:>:]]"
    if [[ $cmd =~ $re ]]; then
      for file in $files; do
        debug "${cmd/FILE/$file}"
        eval "${cmd/FILE/$file}"
      done
    else
      debug "${cmd/FILES/$files}"
      eval "${cmd/FILES/$files}"
    fi
  fi
  sleep "$interval"
done
