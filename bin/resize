#!/usr/bin/env bash
# This script lets you resize images in batches with imagemagick

usage(){
  echo -e "Usage: resize file_or_folder [options]\n\nOPTIONS:\n  -w --widths     Defaults to 2560 1920 1024 560\n  -q --quality    Defaults to 75\n  -a --adjust     Only files within the adjusted date will be resized. See 'man date' val[ymwdHMS]. Defaults to 1m.\n" >&2
  exit 1
}

type "convert" > /dev/null 2>&1 || { echo "Please install imagemagick first" >&2; exit 1; }
[[ $# -ge 1 ]] || usage

adjust="1m"
dir="resized"
files=$1
quality=75
widths="2560 1920 1024 560"

while [[ $# > 1 ]]; do
  shift && key="$1"
  shift && value="$1"
  [[ ! $value ]] && break;

  case $key in
    -w|--widths)
      widths="$1"
      ;;
    -q|--quality)
      quality="$1"
      ;;
    -a|--adjust)
      adjust="$1"
      ;;
    *)
      usage
      ;;
  esac
done

if [[ -d $files ]]; then
  cd $files
  timestamp=`date -j -v-$adjust +"%Y/%m/%d %H:%M"`
  files=`find . -newermt "$timestamp" -d 1 -name '*.jpg'`
fi

mkdir -p $dir || { echo "Could not create ${dir}." >&2; exit 1; }

for file in $files; do
  for width in $widths; do
    resized_file="${file/.jpg/}_${width}.jpg"
    echo "resizing $resized_file"
    `convert -quality $quality -resize $width $file $dir/$resized_file`
  done
done
