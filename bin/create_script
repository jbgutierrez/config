#!/bin/bash
# This script lets your create/edit scripts based on pre-cooked templates
usage() {
  cat <<END
usage: create_script NAME [options]

  The options are as follows:

    -t           Template to use
    -l           Create the script locally rather than globally
    -f           Attempt to create the script regardless of the command's existance

END
}

error() {
  echo -e "error: $1\n"
  usage
  exit $2
} >&2

[[ $# -ge 1 ]] || error "incorrect number of parameters" 1

name=$1
[[ $name ]] || error "missing script name." 1
shift

TEMPLATES_DIR=$HOME/.vim/templates

template=sh
force=0
filename=$HOME/.bin/$name

while getopts ":t:lf" opt; do
  case $opt in
    t)  template=$OPTARG ;;
    l)  filename=$name   ;;
    f)  force=1          ;;
    --) break            ;;
    :)  error "option -${OPTARG} is missing an argument" 1;;
    \?) error "unknown option: -${OPTARG}" 1;;
  esac
done

if [[ -e $filename ]]; then
  (( $force )) || read -r -s -n 1 -p "WARNING: File $filename already exists (press any key to continue) "
else
  (( ! $force )) && type $name > /dev/null 2>&1 && error "there is already a command with name $name" 1
  [[ ! -e "$TEMPLATES_DIR/$template.tpl" ]] && error "there's no template for $template at $TEMPLATES_DIR/$template.tpl" 1
  cp "$TEMPLATES_DIR/$template.tpl" "$filename"
  chmod u+x "$filename"
fi

$EDITOR "$filename"

exit 0
