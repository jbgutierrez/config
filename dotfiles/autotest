#!/usr/bin/env ruby
# Symlink this to ~/.autotest
require 'autotest'

AUTOTEST_PATH = "#{ENV['HOME']}/.autotest_files"

module Autotest::Growl
  def self.growl title, msg, img, pri=0, stick=""
    system "#{AUTOTEST_PATH}/growlnotify.wrapped -n autotest --image #{img.inspect} -p #{pri} -m #{msg.inspect} #{title.inspect} #{stick}"
  end

  Autotest.add_hook :ran_command do |autotest|
    filtered = autotest.results.grep(/\d+\s.*examples?/)
    output = filtered.empty? ? "" : filtered.last.slice(/(\d+)\s.*examples?,\s(\d+)\s.*failures?(?:,\s(\d+)\s.*pending)?/)
    if output =~ /[1-9]\sfailures?/
      growl "Test Results", "#{output}", "#{AUTOTEST_PATH}/fail.jpg"
    elsif output =~ /pending/
      growl "Test Results", "#{output}", "#{AUTOTEST_PATH}/pending.jpg"
    else
      growl "Test Results", "#{output}", "#{AUTOTEST_PATH}/ok.jpg"
    end
  end
end

Autotest.add_hook :initialize do |at|
  %w{.svn .hg .git vendor}.each {|exception| at.add_exception(exception)}
end