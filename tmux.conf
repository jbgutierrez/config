# Set that stupid Esc-Wait off, so VI works again
set -sg  escape-time 0

# vi is good
setw -g mode-keys vi

# mouse behavior
setw -g mode-mouse off

## always load the reset file first
# unbind-key -a
## always load the reset file first
# source-file ~/.tmux.reset.conf

# remmapping copy and paste keys
unbind [
bind Enter copy-mode
unbind p
bind p paste-buffer

# Setup 'v' to begin selection as in Vim
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe "pbcopy"

# Update default binding of `Enter` to also use copy-pipe
bind -t vi-copy Enter copy-pipe "pbcopy"

# Increase history limit
set -g history-limit 10000

# zsh
set -g default-command /bin/zsh
set -g default-shell /bin/zsh

# more custom key bindings
bind r source-file ~/.tmux.conf \; display "Reloaded!"
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# identify activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# UTF8 characters in status bar
set -g status-utf8 on

# center window list
set -g status-justify centre

# terminal colors
set -g default-terminal "screen-256color"

set -g status-fg white
set -g status-bg black

setw -g window-status-fg colour108 # colour108 is an olive color
setw -g window-status-bg default
setw -g window-status-attr dim

setw -g window-status-current-fg colour156 # colour156 is a lime green color
setw -g window-status-current-bg default
setw -g window-status-current-attr bright

set -g pane-border-fg colour108
set -g pane-border-bg default
set -g pane-active-border-fg colour156
set -g pane-active-border-bg default

set -g message-fg white
set -g message-bg black
set -g message-attr bright

# left and right status bar
set -g status-left ' #S ⡇' # session name
set -g status-left-length 20
set -g status-right '#(sysctl vm.loadavg | cut -b 14-29)⡇ #H ' # host name

# recording program output to a log
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind \ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# join/split panes
bind C-J command-prompt -p "join pane from:" "join-pane -s '%%'"
bind C-S command-prompt -p "split pane to:" "join-pane -t '%%'"

# load project specific settings
if-shell 'test -f "~/.tmux.conf.local"' 'source-file ~/.tmux.conf.local'

# TIPS:
#   setup environments with tmuxinator
#   setup layouts inspecting :list-windows
